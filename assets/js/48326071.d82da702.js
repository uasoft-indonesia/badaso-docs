"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7493],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,f=c["".concat(d,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3863:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={docId:"introductioncrud",sidebar_position:1},d="Introduction",s={unversionedId:"crud-generator/introduction-CRUD",id:"crud-generator/introduction-CRUD",isDocsHomePage:!1,title:"Introduction",description:"When adding or editing an existing CRUD, you will see some information that you can change, namely Display Name (Singular and Plural), Server Side, URL Slug, Icon, Model Name, Controller Name, Order Column, Order Display Column, Order Direction and Description. You can also choose if you want to make a Permission automatically.",source:"@site/docs/crud-generator/introduction-CRUD.md",sourceDirName:"crud-generator",slug:"/crud-generator/introduction-CRUD",permalink:"/crud-generator/introduction-CRUD",editUrl:"https://github.com/uasoft-indonesia/badaso-docs/edit/main/docs/crud-generator/introduction-CRUD.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{docId:"introductioncrud",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Relation Many to Many",permalink:"/crud-generator/Relationship/set-relation-many-to-many"},next:{title:"Data Types",permalink:"/crud-generator/datatype"}},p=[{value:"Create Table Description",id:"create-table-description",children:[]},{value:"Set Field Property",id:"set-field-property",children:[]},{value:"Add CRUD",id:"add-crud",children:[]},{value:"Form Result",id:"form-result",children:[]},{value:"Form Output",id:"form-output",children:[]},{value:"Note",id:"note",children:[]}],u={toc:p};function c(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"When adding or editing an existing CRUD, you will see some information that you can change, namely Display Name (Singular and Plural), Server Side, URL Slug, Icon, Model Name, Controller Name, Order Column, Order Display Column, Order Direction and Description. You can also choose if you want to make a Permission automatically."),(0,i.kt)("h2",{id:"create-table-description"},"Create Table Description"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Docusaurus logo",src:n(7146).Z})),(0,i.kt)("h2",{id:"set-field-property"},"Set Field Property"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Browse (sets the field that will appear when you browse the current data)."),(0,i.kt)("li",{parentName:"ul"},"Read (set the field that will appear when you display one data)."),(0,i.kt)("li",{parentName:"ul"},"Edit (set field that will appear and can be changed when you edit the data)."),(0,i.kt)("li",{parentName:"ul"},"Add (set field that will appear and can be added when you add data)."),(0,i.kt)("li",{parentName:"ul"},"Delete (it doesn't have any effect, so it can be checked or not).")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Docusaurus logo",src:n(2919).Z})),(0,i.kt)("h2",{id:"add-crud"},"Add CRUD"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Table Name"),(0,i.kt)("p",{parentName:"li"},"  The name of the table to create a CRUD generator")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Display Name (Singular)"),(0,i.kt)("p",{parentName:"li"},"  This name is to be displayed in the breadcrumb and the title of the browse data table")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"URL Slug (must be unique)"),(0,i.kt)("p",{parentName:"li"},"  This name is to be displayed on the url address as a slug which will later become a differentiating page for browsing other data tables, the slug name must be unique")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Model Name"),(0,i.kt)("p",{parentName:"li"},"  In the form of a combination of the namespace and name class on the model, for example: App/Models/User. Badaso will use your model for CRUD proses")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Order Columns"),(0,i.kt)("p",{parentName:"li"},"  Select the column name to be the initial order of the browse data table")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Generate Permissions"),(0,i.kt)("p",{parentName:"li"},"  Turn on generate permissions to automatically generate CRUD data table user permissions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Server Side"),(0,i.kt)("p",{parentName:"li"},"  Turn on server side if you need data querying the server and for handling large amounts of data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Create Soft Delete"),(0,i.kt)("p",{parentName:"li"},'  Make a soft delete if you need the deleted data can be returned, especially for soft delete before activating this, make sure that your table has columns with the name "deleted_at" and the data type "timestamp"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Display Name (Plural)"),(0,i.kt)("p",{parentName:"li"},"  The name entered in the display name will be displayed on the admin menu item")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Icon"),(0,i.kt)("p",{parentName:"li"},"  Icon that will be displayed on the admin menu item")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Controller Name"),(0,i.kt)("p",{parentName:"li"},"  Overrite controller CRUD generator by inputting namespace and class name in controller, for example: App\\Http\\Controllers\\TestController")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Order Display Column"),(0,i.kt)("p",{parentName:"li"},"  The column selected in this section will be filled with numbers automatically to sort the data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Order Direction"),(0,i.kt)("p",{parentName:"li"},"  There are two options for sorting data in ascending or descending order")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Active Event Notification"),(0,i.kt)("p",{parentName:"li"},"  Events to send notifications, there are options On Create notification event when creating new data, On Read notification event when reading data, On Update notification event when editing data, and On Delete notification event when deleting data.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Description"),(0,i.kt)("p",{parentName:"li"},"  Provide a description of the table data generator CRUD.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Set Relation Many To Many"),(0,i.kt)("p",{parentName:"li"},"  Make relation table with other table using table polymorphism"))),(0,i.kt)("h2",{id:"form-result"},"Form Result"),(0,i.kt)("p",null,"The following is the display result of field that available at Badaso."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Docusaurus logo",src:n(5080).Z})),(0,i.kt)("h2",{id:"form-output"},"Form Output"),(0,i.kt)("p",null,"Every form generated will use the Vue Component provided by Badaso. In the JSON below, the value property is the output value of each form, and field is the column name of the table generated."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md",metastring:'title="JSON"',title:'"JSON"'},'{\n  "data": [\n    {\n      "field": "badaso_text",\n      "value": 227\n    },\n    {\n      "field": "badaso_password",\n      "value": "password"\n    },\n    {\n      "field": "badaso_textarea",\n      "value": "textarea"\n    },\n    {\n      "field": "badaso_search",\n      "value": "search"\n    },\n    {\n      "field": "badaso_checkbox",\n      "value": [\n        "this_is_value"\n      ]\n    },\n    {\n      "field": "badaso_number",\n      "value": "1"\n    },\n    {\n      "field": "badaso_url",\n      "value": "http://dev.programming-bot.com/badaso-admin/main/data-test/add"\n    },\n    {\n      "field": "badaso_time",\n      "value": "2021-01-27T10:18:00.000Z"\n    },\n    {\n      "field": "badaso_date",\n      "value": "2021-01-27T00:00:00.000Z"\n    },\n    {\n      "field": "badaso_select",\n      "value": "this_is_value"\n    },\n    {\n      "field": "badaso_datetime",\n      "value": "2021-01-27T10:18:00.000Z"\n    },\n    {\n      "field": "badaso_select_multiple",\n      "value": [\n        "this_is_value"\n      ]\n    },\n    {\n      "field": "badaso_radio",\n      "value": "this_is_value"\n    },\n    {\n      "field": "badaso_switch",\n      "value": true\n    },\n    {\n      "field": "badaso_slider",\n      "value": 22\n    },\n    {\n      "field": "badaso_editor",\n      "value": "<p>editor</p>"\n    },\n    {\n      "field": "badaso_tags",\n      "value": "badaso,tags"\n    },\n    {\n      "field": "badaso_color_picker",\n      "value": "#754B4B"\n    },\n    {\n      "field": "badaso_upload_image",\n      "value": {\n        "name": "blog.jpg",\n        "base64": "string too long",\n        "file": {}\n      }\n    },\n    {\n      "field": "badaso_upload_image_multiple",\n      "value": [\n        {\n          "name": "categories.jpg",\n          "base64": "string too long",\n          "file": {}\n        },\n        {\n          "name": "event.jpg",\n          "base64": "string too long",\n          "file": {}\n        }\n      ]\n    },\n    {\n      "field": "badaso_upload_file",\n      "value": {\n        "name": "halaman.jpg",\n        "base64": "string too long",\n        "file": {}\n      }\n    },\n    {\n      "field": "badaso_upload_file_multiple",\n      "value": [\n        {\n          "name": "kelas.jpg",\n          "base64": "string too long",\n          "file": {}\n        },\n        {\n          "name": "mentor.jpg",\n          "base64": "string too long",\n          "file": {}\n        }\n      ]\n    },\n    {\n      "field": "badaso_hidden",\n      "value": "hidden"\n    }\n  ]\n}\n')),(0,i.kt)("h2",{id:"note"},"Note"),(0,i.kt)("p",null,"Every component provided by Badaso is intended to be used within tags with the css class ",(0,i.kt)("inlineCode",{parentName:"p"},"row"),". All components provided by Badaso are components that consist of ",(0,i.kt)("inlineCode",{parentName:"p"},"vs-col"),". So in CRUD generator, the Optional Details section can be filled in JSON with the property ",(0,i.kt)("inlineCode",{parentName:"p"},"size"),". This property size contains the numbers 1-12 which is the value to apply to ",(0,i.kt)("inlineCode",{parentName:"p"},"vs-col"),". Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-md",metastring:'title=".vue"',title:'".vue"'},"<vs-row>{{component}}</vs-row>\n")))}c.isMDXComponent=!0},7146:function(e,t,n){t.Z=n.p+"assets/images/crud-add-part-1-43711156531a5dffb353d973fe487b89.png"},5080:function(e,t,n){t.Z=n.p+"assets/images/form-field-f59b00e61b3a4eb8539e7eecefbb47a3.png"},2919:function(e,t,n){t.Z=n.p+"assets/images/generate-crud-d6a9377eca720fa4c8a5ca3cc9c317b2.png"}}]);